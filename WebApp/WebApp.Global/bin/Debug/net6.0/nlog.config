<?xml version="1.0" encoding="utf-8" ?>
<nlog xmlns="http://www.nlog-project.org/schemas/NLog.xsd"
      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
      autoReload="true"
      internalLogLevel="Info"
      throwConfigExceptions= "true"
	  internalLogFile="logs\internal-nlog.log">

  <!-- Enable asp.net core layout renderers -->
  <!--<extensions>
    <add assembly="NLog.Web.AspNetCore" />
  </extensions>-->

  <!-- The targets to write to -->
  <targets>

    <!-- WRITE TO FILE -->

    <!-- WRITE TO DATABASE -->
    <target name="dbLog"
				xsi:type="Database"
				dbProvider="Microsoft.Data.SqlClient.SqlConnection, Microsoft.Data.SqlClient"
        commandText="INSERT INTO [Log].[EventLogs](ScopeId, ActivityId, Application, Logged, Level, Message, CallSite, Logger, Exception, UserId) VALUES(@ScopeId, @ActivityId, @Application, @Logged, @Level, @Message, @CallSite, @Logger, @Exception, @UserId)">

      <parameter name="@ScopeId"			  layout="${event-properties:scopeId}"/>
      <parameter name="@ActivityId"			layout="${event-properties:activityId}"/>
      <parameter name="@Application"		layout="${event-properties:application}"/>
      <parameter name="@Logged"			    layout="${date}"/>
      <parameter name="@Level"			    layout="${level}"/>
      <parameter name="@Message"			  layout="${message}"/>
      <parameter name="@CallSite"			  layout="${callsite}"/>
      <parameter name="@Logger"			    layout="${logger}"/>
      <parameter name="@Exception"		  layout="${exception:tostring}"/>
      <parameter name="@UserId"		      layout="${event-properties:userId}"/>

    </target>

    <target name="dbIntegration"
				xsi:type="Database"
				dbProvider="Microsoft.Data.SqlClient.SqlConnection, Microsoft.Data.SqlClient"
        commandText="INSERT INTO [Log].[IntegrationLogs](ScopeId, ActivityId, Application, Logged, Level, Direction, Code, Method, Query, Payload, CallSite, Exception, UserId) VALUES(@ScopeId, @ActivityId, @Application, @Logged, @Level, @Direction, @Code, @Method, @Query, @Payload, @CallSite, @Exception, @UserId)">

      <parameter name="@ScopeId"			  layout="${event-properties:scopeId}"/>
      <parameter name="@ActivityId"			layout="${event-properties:activityId}"/>
      <parameter name="@Application"		layout="${event-properties:application}"/>
      <parameter name="@Logged"			    layout="${date}"/>
      <parameter name="@Level"			    layout="${level}"/>
      <parameter name="@Direction"		  layout="${event-properties:direction}"/>
      <parameter name="@Code"				    layout="${event-properties:code}"/>
      <parameter name="@Method"			    layout="${event-properties:method}"/>
      <parameter name="@Query"			    layout="${event-properties:query}"/>
      <parameter name="@Payload"			  layout="${event-properties:payload}"/>
      <parameter name="@CallSite"			  layout="${callsite}"/>
      <parameter name="@Exception"		  layout="${exception:tostring}"/>
      <parameter name="@UserId"		      layout="${event-properties:userId}"/>

    </target>

  </targets>

  <!-- The rules to map from logger name to target -->
  <rules>

    <!--Skip non-critical Microsoft logs and so log only own logs-->
    <logger name="Microsoft.*" maxLevel="Info" final="true" />

    <!-- BlackHole without writeTo -->
    <logger name="logger" minlevel="Trace" writeTo="dbLog"></logger>
    <logger name="integrationLogger" minlevel="Trace" writeTo="dbIntegration"></logger>
  </rules>
</nlog>